version: '3.4'

# Extension fields for reusing configuration fragments
x-args: &default-args
  dev_path: ${DEV_PATH}
  SSH_PRIV_KEY: ${SSH_PRIV_KEY}

x-logging: &default-logging
  driver: json-file
  options:
    max-size: ${LOG_MAX_SIZE}
    max-file: ${LOG_MAX_FILE}

x-services-volume:
  - &ignore-venv
    /usr/src/app/.venv

services:

  #
  # OG Apps
  #

  abtesting-service:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/django-service.dockerfile
      args:
        << : *default-args
        service_path: ./abtesting-service
    command: python manage.py runserver 0.0.0.0:8002
    entrypoint: /usr/src/entry.sh
    environment:
      - ABTESTING_CFG_FILE=app/${CONFIG_FILE}
    depends_on:
      - mariadb
    logging: *default-logging
    ports: ['8002:8002']
    volumes:
      - ../abtesting-service:/usr/src/app
      - *ignore-venv
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  chrono:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/django-service.dockerfile
      args:
        << : *default-args
        service_path: ./chronotrigger
    command: python manage.py runserver 0.0.0.0:8001
    entrypoint: /usr/src/entry.sh
    environment:
      - CHRONO_CFG_FILE=app/${CONFIG_FILE}
    depends_on:
      - mariadb
      - memcached
      - mongo
    logging: *default-logging
    ports: ['8001:8001']
    volumes:
      - ../chronotrigger:/usr/src/app
      - *ignore-venv
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  chrono-celery:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/celery-service.dockerfile
      args:
        << : *default-args
        service_path: ./chronotrigger
    command: watchmedo auto-restart --directory . -p '*.py' --recursive -- celery worker --beat --scheduler django --app celery_app -l info
    entrypoint: /usr/src/entry.sh
    environment:
      - CHRONO_CFG_FILE=app/${CONFIG_FILE}
    depends_on:
      - mariadb
      - memcached
      - mongo
      - rabbitmq
    logging: *default-logging
    volumes:
      - ../chronotrigger:/usr/src/app
      - *ignore-venv
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  memento:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/celery36-service.dockerfile
      # dockerfile: ${DEV_PATH}/dockerfiles/celery-service.dockerfile
      args:
        << : *default-args
        service_path: ./memento
    command: watchmedo auto-restart --directory ./memento --directory ../libraries/ -p '*.py' --recursive -- celery worker --app memento.celery_app -l info -n og@%h
    entrypoint: /usr/src/entry.sh
    environment:
      - PYTHONPATH=/usr/src/app/memento
      - SETTINGS_FILE=${CONFIG_FILE}
    depends_on:
      - memcached
      - rabbitmq
    logging: *default-logging
    volumes:
      - ../memento:/usr/src/app
      - *ignore-venv
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  moonshine-api:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/django-service.dockerfile
      args:
        << : *default-args
        service_path: ./moonshine-api
    command: python manage.py runserver 0.0.0.0:8000
    entrypoint: /usr/src/entry.sh
    environment:
     - MOONSHINE_CFG_FILE=app/${CONFIG_FILE}
    depends_on:
      - mariadb
      - memcached
      - rabbitmq
      - abtesting-service
    logging: *default-logging
    ports: ['8000:8000']
    volumes:
      - ../moonshine-api:/usr/src/app
      - *ignore-venv
      # - ../moonshine-core/:/usr/src/libraries/moonshine-core
      # - ../relay-models/:/usr/src/libraries/relay-models
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  moonshine-celery:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/celery-service.dockerfile
      args:
        << : *default-args
        service_path: ./moonshine-celery
    command: watchmedo auto-restart --directory . -p '*.py' --recursive -- celery worker --app celery_app --loglevel=info
    entrypoint: /usr/src/entry.sh
    environment:
      - MOONSHINE_CFG_FILE=app/${CONFIG_FILE}
    depends_on:
      - mariadb
      - memcached
      - rabbitmq
      - abtesting-service
    logging: *default-logging
    volumes:
      - ../moonshine-celery:/usr/src/app
      - *ignore-venv
      # - ../moonshine-core/:/usr/src/libraries/abtesting
      # - ../moonshine-core/:/usr/src/libraries/moonshine-core
      # - ../relay-models/:/usr/src/libraries/relay-models
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  relay:
    build:
      context: ../
      dockerfile: ${DEV_PATH}/dockerfiles/celery-service.dockerfile
      args:
        << : *default-args
        service_path: ./relay
    command: watchmedo auto-restart --directory relay -p '*.py' --recursive -- celery worker --app relay.celery_app --loglevel=info
    entrypoint: /usr/src/entry.sh
    environment:
      - SETTINGS_FILE=${CONFIG_FILE}
    depends_on:
      - mariadb
      - rabbitmq
    logging: *default-logging
    volumes:
      - ../relay:/usr/src/app
      - *ignore-venv
      # - ../relay-models/:/usr/src/libraries/relay-models
      # - ../woodhouse/:/usr/src/libraries/woodhouse

  #
  # Third party services
  #

  mariadb:
    image: mariadb
    ports: ['3306:3306']
    environment:
      MYSQL_ROOT_PASSWORD: ogpassw
    logging: *default-logging
    volumes:
      - mariadb_data:/data/db

  memcached:
    image: memcached
    ports: ['11211:11211']

  mongo:
    image: mongo
    ports: ['27017:27017']
    logging: *default-logging
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    image: rabbitmq:3-management
    hostname: my-rabbit
    environment:
      RABBITMQ_DEFAULT_USER: 'rabbitmq'
      RABBITMQ_DEFAULT_PASS: 'rabbitmq'
      RABBITMQ_DEFAULT_VHOST: '/'
    logging: *default-logging
    ports:
      - '15672:15672'
      - '5672:5672'

  redis:
    image: redis
    ports: ['6379:6379']
    logging: *default-logging

volumes:
  mariadb_data:
  mongo_data:
